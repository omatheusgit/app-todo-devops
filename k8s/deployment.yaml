# Configurações e variáveis de ambiente para a API (Backend)
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-todo-config
data:
  SQLITE_PATH: "backend/tasks.db"
  FLASK_ENV: "production"
---
# Deployment do Backend (API)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-todo-deployment
  labels:
    app: api-todo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-todo
  template:
    metadata:
      labels:
        app: api-todo
    spec:
      containers:
      - name: api-todo-container
        image: omatheusdocker/prj-to-do-api:latest
        ports:
        - containerPort: 5000
        envFrom:
        - configMapRef:
            name: api-todo-config
---
# Service interno (ClusterIP) para a API
apiVersion: v1
kind: Service
metadata:
  name: api-todo-service
spec:
  type: ClusterIP
  selector:
    app: api-todo
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
---
# Configurações e variáveis de ambiente para o App (Frontend)
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-todo-config
data:
  # A URL para a API agora aponta para o nome do Service do Kubernetes
  API_URL: "http://api-todo-service:5000/tasks/"
---
# Deployment do Frontend (App)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-todo-deployment
  labels:
    app: app-todo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-todo
  template:
    metadata:
      labels:
        app: app-todo
    spec:
      containers:
      - name: app-todo-container
        image: omatheusdocker/prj-to-do-app:latest
        ports:
        - containerPort: 8501
        envFrom:
        - configMapRef:
            name: app-todo-config
---
# Service externo (LoadBalancer) para o Frontend
apiVersion: v1
kind: Service
metadata:
  name: app-todo-loadbalancer
spec:
  type: LoadBalancer
  selector:
    app: app-todo
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8501
